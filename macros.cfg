#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z10  

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    STATUS_HOMING
    CG28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28 Z
    #PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    #--------------------------------------------------------------------------------------------------------
    #--- read values provided by slicer
    {% set temp_bed     = params.BED|int %}     #*** Required. BED value must be provided by slicer
    {% set temp_hotend  = params.HOTEND|int %}  #*** Required. HOTEND value must be provided by slicer
    #
    #--------------------------------------------------------------------------------------------------------
    #--- do the usual stuff
    LED_PCT_IDLE   #Caselight
    STATUS_HEATING   #SB_LED
    M190 S{temp_bed}                            #*** Set bed temp and wait
    M109 S150                                   #*** Heat nozzle to 150 and wait
    LED_PCT_PRINT   #Caselight
    STATUS_HOMING   #SB_LED
    G32                                         #*** Home all, probe bed, level the gantry and such
    G90                                         #*** Absolute positioning - don't remove
    STATUS_MESHING   #SB_LED
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default               #*** Load mesh
    #--------------------------------------------------------------------------------------------------------
    #move near print to heat
    SMART_PARK
    #--- set hotend to the temp provided by the slicer
    STATUS_HEATING   #SB_LED
    M109 S{temp_hotend}                         #*** Set extruder temp and wait
    STATUS_CLEANING
    LINE_PURGE
    #CLEAN_NOZZLE
    STATUS_PRINTING   #SB_LED
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    STATUS_OFF   #SB_LED
    LED_PCT_IDLE   #Caselight
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro LED_ON]
gcode:
  SET_PIN PIN=caselight VALUE=1
[gcode_macro LED_PCT_IDLE]
gcode:
  SET_PIN PIN=caselight VALUE=0.06
[gcode_macro LED_PCT_PRINT]
gcode:
  SET_PIN PIN=caselight VALUE=0.36
[gcode_macro LED_OFF]
gcode:
  SET_PIN PIN=caselight VALUE=0